import os
from fastapi import FastAPI, Request
from telegram import Update, Bot
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
)

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.environ.get("BOT_TOKEN")
CHAT_ID = int(os.environ.get("CHAT_ID"))  # –ø—Ä–∏–º–µ—Ä: 123456789
WEBHOOK_URL = "https://lokki-signals-bot2.onrender.com"  # —Ç–≤–æ–π –¥–æ–º–µ–Ω –Ω–∞ Render

# === FastAPI –∏ Telegram Bot ===
bot = Bot(token=BOT_TOKEN)
app = FastAPI()
application = Application.builder().token(BOT_TOKEN).build()

# === –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç Lokki Signals —Ä–∞–±–æ—Ç–∞–µ—Ç!")

async def signal_pepe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà PEPE: —Å–∏–≥–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç.")

async def signal_xrp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà XRP: —Å–∏–≥–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç.")

async def signal_trx(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà TRX: —Å–∏–≥–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç.")

async def signal_ena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà ENA: —Å–∏–≥–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç.")

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å: –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ.")

async def alert_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–ö–õ–Æ–ß–ï–ù–´.")

async def alert_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–´–ö–õ–Æ–ß–ï–ù–´.")

# === –†–æ—É—Ç–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ ===
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("signal_pepe", signal_pepe))
application.add_handler(CommandHandler("signal_xrp", signal_xrp))
application.add_handler(CommandHandler("signal_trx", signal_trx))
application.add_handler(CommandHandler("signal_ena", signal_ena))
application.add_handler(CommandHandler("portfolio", portfolio))
application.add_handler(CommandHandler("alert_on", alert_on))
application.add_handler(CommandHandler("alert_off", alert_off))

# === Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ ===
@app.post("/")
async def webhook(request: Request):
    data = await request.json()
    update = Update.de_json(data, bot)
    await application.process_update(update)
    return {"status": "ok"}

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ FastAPI ===
@app.on_event("startup")
async def startup():
    await application.initialize()
    await application.start()
    await bot.set_webhook(url=WEBHOOK_URL)

@app.on_event("shutdown")
async def shutdown():
    await application.stop()
    await application.shutdown()
