import os
from dotenv import load_dotenv
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

# –°–æ–∑–¥–∞—ë–º Telegram-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
application = Application.builder().token(BOT_TOKEN).build()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FastAPI
app = FastAPI()

# === –ö–æ–º–∞–Ω–¥—ã ===

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

async def signal_pepe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ PEPE: –≤—Ö–æ–¥ –≤ –ª–æ–Ω–≥ –æ—Ç 0.000011500, —Ç–µ–π–∫ 0.000011900, —Å—Ç–æ–ø 0.000011400.")

async def signal_xrp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìâ –°–∏–≥–Ω–∞–ª –ø–æ XRP: —Å–ª–µ–¥–∏–º –∑–∞ —É—Ä–æ–≤–Ω–µ–º 0.60 ‚Äî –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç—Å–∫–æ–∫.")

async def signal_trx(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä –°–∏–≥–Ω–∞–ª –ø–æ TRX: —É–≤–µ—Ä–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç, —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏ –ø—Ä–æ–±–æ–µ 0.1300.")

async def signal_ena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ ENA: –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤ –∑–æ–Ω–µ 0.68‚Äì0.70. –û–∂–∏–¥–∞–µ—Ç—Å—è –≤—ã—Ö–æ–¥ –≤–≤–µ—Ä—Ö.")

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å:\n- PEPE: $300\n- XRP: $150\n- TRX: $50\n- –í Earn –∏ USDT: –æ—Å—Ç–∞–ª—å–Ω–æ–µ")

async def alert_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.")

async def alert_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã.")

# === –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã ===

application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("signal_pepe", signal_pepe))
application.add_handler(CommandHandler("signal_xrp", signal_xrp))
application.add_handler(CommandHandler("signal_trx", signal_trx))
application.add_handler(CommandHandler("signal_ena", signal_ena))
application.add_handler(CommandHandler("portfolio", portfolio))
application.add_handler(CommandHandler("alert_on", alert_on))
application.add_handler(CommandHandler("alert_off", alert_off))

# === Webhook ===

@app.post("/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    update = Update.de_json(data, application.bot)
    await application.process_update(update)
    return {"ok": True}  # ‚Üê –ë—ã–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑–¥–µ—Å—å

# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è) ===

@app.get("/")
async def root():
    return {"ok": True}
