import os
from fastapi import FastAPI, Request
from telegram import Update, BotCommand
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
)

# === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ===
BOT_TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_HOST = "https://lokki-signals-bot.onrender.com"
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"
PORT = 10000

# === FastAPI ===
app = FastAPI()

# === –ë–æ—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
application = Application.builder().token(BOT_TOKEN).build()

# === –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

async def signal_pepe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ PEPE: –≤—Ö–æ–¥ –æ—Ç 0.000011500, —Ç–µ–π–∫ 0.000011900, —Å—Ç–æ–ø 0.000011450")

async def signal_xrp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ XRP: –≤—Ö–æ–¥ –æ—Ç 0.62, —Ç–µ–π–∫ 0.655, —Å—Ç–æ–ø 0.598")

async def signal_trx(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ TRX: –≤—Ö–æ–¥ –æ—Ç 0.1295, —Ç–µ–π–∫ 0.136, —Å—Ç–æ–ø 0.125")

async def signal_ena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ ENA: –≤—Ö–æ–¥ –æ—Ç 0.445, —Ç–µ–π–∫ 0.472, —Å—Ç–æ–ø 0.432")

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíº –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: PEPE, XRP, ENA, TRX. –ë–∞–ª–∞–Ω—Å –∏ –ø–æ–∑–∏—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é.")

async def alert_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.")

async def alert_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

# === –†–æ—É—Ç–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ ===
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("signal_pepe", signal_pepe))
application.add_handler(CommandHandler("signal_xrp", signal_xrp))
application.add_handler(CommandHandler("signal_trx", signal_trx))
application.add_handler(CommandHandler("signal_ena", signal_ena))
application.add_handler(CommandHandler("portfolio", portfolio))
application.add_handler(CommandHandler("alert_on", alert_on))
application.add_handler(CommandHandler("alert_off", alert_off))


# === Webhook —ç–Ω–¥–ø–æ–∏–Ω—Ç ===
@app.post(WEBHOOK_PATH)
async def webhook_handler(–∂request: Request):
    update = Update.de_json(await request.json(), application.bot)
    await application.update_queue.put(update)
    return {"ok": True}


# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Render ===
@app.on_event("startup")
async def on_startup():
    await application.bot.set_webhook(WEBHOOK_URL)
