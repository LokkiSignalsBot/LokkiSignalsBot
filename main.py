import os
import logging
from fastapi import FastAPI, Request
from telegram import Bot, Update
from telegram.ext import Application, CommandHandler, ContextTypes, Dispatcher

BOT_TOKEN = os.getenv("BOT_TOKEN", "8233879922:AAGHqdKZmSY853TCboDfNFV8DqRQdpYxOSU")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://lokki-signals-bot2.onrender.com/webhook")
CHAT_ID = os.getenv("CHAT_ID", "360051195")

app = FastAPI()
bot = Bot(BOT_TOKEN)

application = Application.builder().token(BOT_TOKEN).build()

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

async def signal_pepe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üß† –°–∏–≥–Ω–∞–ª –ø–æ PEPE: –∂–¥—ë–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞...")

async def signal_xrp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä –°–∏–≥–Ω–∞–ª –ø–æ XRP: –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä—ã–Ω–æ–∫...")

async def signal_trx(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ö°Ô∏è –°–∏–≥–Ω–∞–ª –ø–æ TRX: –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è...")

async def signal_ena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª –ø–æ ENA: –∏—â–µ–º –≤—Ö–æ–¥...")

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíº –¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ç—É—Ç.")

async def alert_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.")

async def alert_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("signal_pepe", signal_pepe))
application.add_handler(CommandHandler("signal_xrp", signal_xrp))
application.add_handler(CommandHandler("signal_trx", signal_trx))
application.add_handler(CommandHandler("signal_ena", signal_ena))
application.add_handler(CommandHandler("portfolio", portfolio))
application.add_handler(CommandHandler("alert_on", alert_on))
application.add_handler(CommandHandler("alert_off", alert_off))

# Webhook POST –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç Telegram
@app.post("/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    update = Update.de_json(data, bot)
    await application.process_update(update)
    return {"ok": True}

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π GET –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
@app.get("/")
def root():
    return {"status": "ok"}

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ uvicorn
if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=10000)
