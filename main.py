import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("TELEGRAM_TOKEN")

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
alerts_enabled = {}

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

async def signal_pepe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª PEPE: –ñ–¥—ë–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞...")

async def signal_xrp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª XRP: –ñ–¥—ë–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞...")

async def signal_trx(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª TRX: –ñ–¥—ë–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞...")

async def signal_ena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìà –°–∏–≥–Ω–∞–ª ENA: –ñ–¥—ë–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞...")

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")

async def alert_on(update: Update, context: ContextTypes.DEFAULT_TYPE):
    alerts_enabled[update.effective_chat.id] = True
    await update.message.reply_text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!")

async def alert_off(update: Update, context: ContextTypes.DEFAULT_TYPE):
    alerts_enabled[update.effective_chat.id] = False
    await update.message.reply_text("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã!")

def main():
    app = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("signal_pepe", signal_pepe))
    app.add_handler(CommandHandler("signal_xrp", signal_xrp))
    app.add_handler(CommandHandler("signal_trx", signal_trx))
    app.add_handler(CommandHandler("signal_ena", signal_ena))
    app.add_handler(CommandHandler("portfolio", portfolio))
    app.add_handler(CommandHandler("alert_on", alert_on))
    app.add_handler(CommandHandler("alert_off", alert_off))

    # Webhook –∑–∞–ø—É—Å–∫
    app.run_webhook(
        listen="0.0.0.0",
        port=10000,
        url_path=TOKEN,
        webhook_url=f"https://lokki-signals-bot.onrender.com/{TOKEN}"
    )

if __name__ == '__main__':
    main()
