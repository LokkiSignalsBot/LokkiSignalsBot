import os
import time
import requests
from telegram import Bot

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
BINANCE_API_KEY = os.getenv("BINANCE_API_KEY")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ Binance API
HEADERS = {
    "X-MBX-APIKEY": BINANCE_API_KEY
}

# –ú–æ–Ω–µ—Ç—ã –∏ –∏—Ö —É—Ä–æ–≤–Ω–∏ –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤
SYMBOLS = {
    "PEPEUSDT": 0.00001150,
    "ENAUSDT": 0.540,
    "TRXUSDT": 0.1220,
    "SUIUSDT": 1.200
}

bot = Bot(token=BOT_TOKEN)

def get_price(symbol):
    """–ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É —Å Binance API"""
    try:
        url = f"https://api.binance.com/api/v3/ticker/price?symbol={symbol}"
        response = requests.get(url, headers=HEADERS, timeout=10)
        response.raise_for_status()
        data = response.json()
        return float(data["price"])
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É {symbol}: {e}")
        return None

def send_signal(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ Telegram"""
    try:
        bot.send_message(chat_id=CHAT_ID, text=message)
        print(f"[INFO] –°–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {message}")
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: {e}")

def main():
    while True:
        for symbol, level in SYMBOLS.items():
            price = get_price(symbol)
            if price is None:
                continue

            if price <= level:
                send_signal(f"üîî {symbol} —É–ø–∞–ª –¥–æ {price} ‚Äî –Ω–∏–∂–µ —É—Ä–æ–≤–Ω—è {level}")
            else:
                print(f"{symbol}: {price} (–±–µ–∑ —Å–∏–≥–Ω–∞–ª–∞)")

        time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

if __name__ == "__main__":
    main()
